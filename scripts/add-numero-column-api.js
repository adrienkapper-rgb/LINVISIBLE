const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// Charger les variables d'environnement
require('dotenv').config({ path: '.env.local' });

async function addNumeroColumnViaAPI() {
  try {
    console.log('üîÑ Ajout de la colonne "numero" √† la table products via API REST...');

    // URL et cl√©s Supabase
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY; // Vous devrez ajouter cette cl√©

    if (!supabaseUrl) {
      throw new Error('NEXT_PUBLIC_SUPABASE_URL non trouv√©e dans .env.local');
    }

    if (!supabaseServiceKey) {
      console.log('‚ö†Ô∏è  SUPABASE_SERVICE_ROLE_KEY non trouv√©e dans .env.local');
      console.log('üìù Vous devez ajouter votre cl√© de service role pour ex√©cuter des requ√™tes DDL');
      console.log('üí° Alternative: Ex√©cutez directement dans l\'interface web Supabase');
      return;
    }

    // Requ√™te SQL
    const sqlQuery = `
      ALTER TABLE products
      ADD COLUMN numero INTEGER NOT NULL DEFAULT 0;

      COMMENT ON COLUMN products.numero IS 'Num√©ro de r√©f√©rence du produit';
    `;

    console.log('üìÑ Requ√™te SQL √† ex√©cuter:', sqlQuery);

    // Utiliser l'API REST pour ex√©cuter la requ√™te
    const response = await fetch(`${supabaseUrl}/rest/v1/rpc/sql`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${supabaseServiceKey}`,
        'apikey': supabaseServiceKey
      },
      body: JSON.stringify({
        query: sqlQuery
      })
    });

    if (!response.ok) {
      const error = await response.text();
      throw new Error(`Erreur API: ${response.status} - ${error}`);
    }

    const result = await response.json();
    console.log('‚úÖ Colonne "numero" ajout√©e avec succ√®s √† la table products');
    console.log('üìä R√©sultat:', result);

    // V√©rification
    console.log('üîç V√©rification de la nouvelle colonne...');

    const verifyResponse = await fetch(`${supabaseUrl}/rest/v1/rpc/sql`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${supabaseServiceKey}`,
        'apikey': supabaseServiceKey
      },
      body: JSON.stringify({
        query: `
          SELECT column_name, data_type, is_nullable, column_default
          FROM information_schema.columns
          WHERE table_name = 'products'
          AND column_name = 'numero';
        `
      })
    });

    if (verifyResponse.ok) {
      const verifyResult = await verifyResponse.json();
      console.log('‚úÖ V√©rification r√©ussie:', verifyResult);
    }

  } catch (err) {
    console.error('‚ùå Erreur:', err.message);
    console.log('\nüí° Solutions alternatives:');
    console.log('1. Ex√©cutez la requ√™te directement dans l\'interface web Supabase');
    console.log('2. Ajoutez SUPABASE_SERVICE_ROLE_KEY √† votre fichier .env.local');
    console.log('3. Utilisez le CLI Supabase si disponible');
  }
}

// Message d'information
console.log('üéØ Script pour ajouter la colonne "numero" √† la table products');
console.log('üìã Projet Supabase: rnxhkjvcixumuvjfxdjo');
console.log('üîó URL: https://rnxhkjvcixumuvjfxdjo.supabase.co\n');

// Ex√©cuter le script
addNumeroColumnViaAPI();